name: Build and Release Cluster Dashboard

on:
  push:
    tags:
      - 'dashboard-v*.*.*'  # Trigger on tags like dashboard-v1.0.5
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.5)'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/cluster-dashboard

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/dashboard-v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./kubernetes/apps/cluster-dashboard/app
          platforms: linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update and commit chart updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          VERSION="${{ steps.version.outputs.version }}"

          # Fetch latest main branch
          git fetch origin main

          # Switch to main branch (use -f to force, discarding any local changes from detached HEAD)
          git checkout -f main

          # Pull latest changes to ensure we're up to date
          git pull origin main

          # Now apply the version changes on the clean main branch
          sed -i "s/^version: .*/version: $VERSION/" charts/cluster-dashboard/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: \"$VERSION\"/" charts/cluster-dashboard/Chart.yaml
          sed -i "s/tag: .*/tag: \"v$VERSION\"/" charts/cluster-dashboard/values.yaml

          # Check if there are actually any changes to commit
          if git diff --quiet charts/cluster-dashboard/Chart.yaml charts/cluster-dashboard/values.yaml; then
            echo "No changes needed - chart already at version $VERSION"
            exit 0
          fi

          # Show what changed for debugging
          echo "Changes to be committed:"
          git diff charts/cluster-dashboard/Chart.yaml charts/cluster-dashboard/values.yaml

          # Commit and push the changes
          git add charts/cluster-dashboard/Chart.yaml charts/cluster-dashboard/values.yaml
          git commit -m "chore: Bump cluster-dashboard chart to v$VERSION"
          git push origin main

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'push'
        with:
          tag_name: dashboard-v${{ steps.version.outputs.version }}
          name: Cluster Dashboard v${{ steps.version.outputs.version }}
          body: |
            ## Cluster Dashboard v${{ steps.version.outputs.version }}

            ### Docker Image
            ```
            ghcr.io/${{ env.IMAGE_NAME }}:v${{ steps.version.outputs.version }}
            ```

            ### Helm Chart
            Chart version: ${{ steps.version.outputs.version }}

            ### Installation
            ```bash
            # Update HelmRelease
            kubectl edit helmrelease cluster-dashboard -n cluster-dashboard
            # Change spec.chart.spec.version to "${{ steps.version.outputs.version }}"
            # Change values.image.tag to "v${{ steps.version.outputs.version }}"

            # Or via Flux
            flux reconcile helmrelease cluster-dashboard -n cluster-dashboard
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
