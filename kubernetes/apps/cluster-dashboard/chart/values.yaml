# Default values for cluster-dashboard

# Number of replicas
replicaCount: 2

image:
  repository: ghcr.io/rjeans/cluster-dashboard
  pullPolicy: IfNotPresent
  tag: "latest"

# Image pull secrets (if using private registry)
imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use
  name: "cluster-dashboard"

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 8080

ingress:
  enabled: true
  className: "traefik"
  annotations:
    traefik.ingress.kubernetes.io/router.priority: "10"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: cluster-dashboard-security@kubernetescrd
  hosts:
    - host: cluster.jeansy.org
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: cluster-dashboard-tls
      hosts:
        - cluster.jeansy.org

# Certificate configuration
certificate:
  enabled: true
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  dnsNames:
    - cluster.jeansy.org

# Network policy configuration
networkPolicy:
  enabled: true
  allowedNamespaces:
    - traefik
    - cloudflare-tunnel

# Resource limits
resources:
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 200m
    memory: 128Mi

# Liveness probe configuration
livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  periodSeconds: 30
  timeoutSeconds: 3
  failureThreshold: 3

# Readiness probe configuration
readinessProbe:
  httpGet:
    path: /readiness
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3

# Pod anti-affinity for HA
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: cluster-dashboard
          topologyKey: kubernetes.io/hostname

# Tolerations for control plane scheduling
tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule

nodeSelector: {}

# Environment variables
env:
  PORT: "8080"
  TZ: "UTC"

# Middleware for security headers
middleware:
  security:
    enabled: true
    headers:
      frameDeny: true
      browserXssFilter: true
      contentTypeNosniff: true
      stsSeconds: 31536000
      stsIncludeSubdomains: true
      stsPreload: true
      customResponseHeaders:
        X-Robots-Tag: "noindex, nofollow"

  rateLimit:
    enabled: false
    average: 100
    period: 1m
    burst: 50
