apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-dashboard
  namespace: cluster-dashboard
  labels:
    app.kubernetes.io/name: cluster-dashboard
    app.kubernetes.io/component: dashboard
    dashboard.monitor: "true"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: cluster-dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cluster-dashboard
        app.kubernetes.io/component: dashboard
    spec:
      serviceAccountName: cluster-dashboard
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        seccompProfile:
          type: RuntimeDefault

      # Anti-affinity to spread across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: cluster-dashboard
                topologyKey: kubernetes.io/hostname

      containers:
        - name: dashboard
          image: ghcr.io/rjeans/cluster-dashboard:latest
          imagePullPolicy: IfNotPresent

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          env:
            - name: PORT
              value: "8080"
            - name: TZ
              value: "UTC"
            - name: TALOSCONFIG
              value: "/etc/talos/talosconfig"

          volumeMounts:
            - name: talos-config
              mountPath: /etc/talos
              readOnly: true

          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi

          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /readiness
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 5

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65534
            capabilities:
              drop:
                - ALL

      # Tolerations to allow scheduling on control plane nodes if needed
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule

      # Volumes
      volumes:
        - name: talos-config
          secret:
            secretName: talos-config
            defaultMode: 0400
